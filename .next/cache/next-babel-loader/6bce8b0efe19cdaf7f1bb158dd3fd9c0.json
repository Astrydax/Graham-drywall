{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/antho/Desktop/Graham-drywall/components/hero/contact/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as EmailValidator from 'email-validator';\nimport PhoneValidator from 'phone';\nimport FormInput from './FormInput';\nimport FormMessaging from './FormMessaging';\nimport ContactTemplate from '../../ContactTemplate';\n\nvar Contact = /*#__PURE__*/function (_ContactTemplate) {\n  _inherits(Contact, _ContactTemplate);\n\n  var _super = _createSuper(Contact);\n\n  function Contact() {\n    _classCallCheck(this, Contact);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$state = this.state,\n          success = _this$state.success,\n          error = _this$state.error,\n          inflight = _this$state.inflight; // sets contact form messaging based on success state\n\n      var messaging = success ? {\n        title: \"THANK YOU\",\n        msg: \"We've received your request. Keep an eye out for our email or phone call. We look forward to working with you.\"\n      } : {\n        title: \"REQUEST A FREE ESTIMATE\",\n        msg: \"Short but sweet prompt to user to contact us. Not too long, not too short.\"\n      };\n      return __jsx(\"form\", {\n        className: \"contact-form col col s12 m12 l5 right z-depth-3\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, __jsx(FormMessaging, _extends({}, messaging, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      })), !success && __jsx(\"div\", {\n        className: \"contact-fields\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, this.constructor.FieldNames.map(function (name) {\n        return __jsx(FormInput, {\n          name: name,\n          value: _this.state[name],\n          onChange: _this.handleInputOnChange,\n          error: _this.getErrorStatus(name),\n          key: name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        });\n      }), error && __jsx(\"p\", {\n        className: \"contact-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }\n      }, error), __jsx(\"button\", {\n        className: \"waves-effect waves-light btn contact-button left\",\n        disabled: inflight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, \"Submit Your Request\")));\n    }\n  }]);\n\n  return Contact;\n}(ContactTemplate);\n\nexport default Contact;","map":{"version":3,"sources":["/mnt/c/Users/antho/Desktop/Graham-drywall/components/hero/contact/index.js"],"names":["React","EmailValidator","PhoneValidator","FormInput","FormMessaging","ContactTemplate","Contact","state","success","error","inflight","messaging","title","msg","handleSubmit","constructor","FieldNames","map","name","handleInputOnChange","getErrorStatus"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,OAAOC,cAAP,MAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;IAEMC,O;;;;;;;;;;;;;6BACI;AAAA;;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,QADlB,eACkBA,QADlB,EAGN;;AACA,UAAMC,SAAS,GAAGH,OAAO,GAAG;AAC1BI,QAAAA,KAAK,EAAE,WADmB;AAE1BC,QAAAA,GAAG,EAAE;AAFqB,OAAH,GAGrB;AACFD,QAAAA,KAAK,EAAE,yBADL;AAEFC,QAAAA,GAAG,EAAE;AAFH,OAHJ;AAQA,aACE;AAAM,QAAA,SAAS,EAAC,iDAAhB;AAAkE,QAAA,QAAQ,EAAE,KAAKC,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD,eAAmBH,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEG,CAACH,OAAD,IACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKO,WAAL,CAAiBC,UAAjB,CAA4BC,GAA5B,CAAgC,UAAAC,IAAI;AAAA,eACnC,MAAC,SAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,KAAK,EAAE,KAAI,CAACX,KAAL,CAAWW,IAAX,CAFT;AAGE,UAAA,QAAQ,EAAE,KAAI,CAACC,mBAHjB;AAIE,UAAA,KAAK,EAAE,KAAI,CAACC,cAAL,CAAoBF,IAApB,CAJT;AAKE,UAAA,GAAG,EAAEA,IALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmC;AAAA,OAApC,CADH,EAUGT,KAAK,IAAI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BA,KAA9B,CAVZ,EAWE;AACE,QAAA,SAAS,EAAC,kDADZ;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXF,CAHJ,CADF;AAyBD;;;;EAtCmBL,e;;AAyCtB,eAAeC,OAAf","sourcesContent":["import React from 'react';\nimport * as EmailValidator from 'email-validator';\nimport PhoneValidator from 'phone';\nimport FormInput from './FormInput';\nimport FormMessaging from './FormMessaging';\nimport ContactTemplate from '../../ContactTemplate';\n\nclass Contact extends ContactTemplate {\n  render(){\n    const { success, error, inflight } = this.state;\n\n    // sets contact form messaging based on success state\n    const messaging = success ? {\n      title: \"THANK YOU\",\n      msg: \"We've received your request. Keep an eye out for our email or phone call. We look forward to working with you.\"\n    } : {\n      title: \"REQUEST A FREE ESTIMATE\",\n      msg: \"Short but sweet prompt to user to contact us. Not too long, not too short.\"\n    };\n\n    return (\n      <form className=\"contact-form col col s12 m12 l5 right z-depth-3\" onSubmit={this.handleSubmit}>\n        <FormMessaging {...messaging} />\n        {!success && (\n          <div className=\"contact-fields\">\n            {this.constructor.FieldNames.map(name => (\n              <FormInput\n                name={name}\n                value={this.state[name]}\n                onChange={this.handleInputOnChange}\n                error={this.getErrorStatus(name)}\n                key={name}\n              />\n            ))}\n            {error && <p className=\"contact-error\">{error}</p>}\n            <button\n              className=\"waves-effect waves-light btn contact-button left\"\n              disabled={inflight}  \n            >\n              Submit Your Request\n            </button>\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}