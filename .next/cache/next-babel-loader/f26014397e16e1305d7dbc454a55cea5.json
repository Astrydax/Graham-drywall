{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/antho/Desktop/Graham-drywall/components/cards/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Cards = /*#__PURE__*/function (_React$Component) {\n  _inherits(Cards, _React$Component);\n\n  var _super = _createSuper(Cards);\n\n  function Cards() {\n    _classCallCheck(this, Cards);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Cards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // initialize masonry.js class when on the client side\n      if (typeof document !== 'undefined') {\n        var elem = document.querySelector('.cards');\n        var msnry = new Masonry(elem, {\n          // options\n          itemSelector: '.col' // columnWidth: 200\n\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          Card = _this$props.Card,\n          array = _this$props.array;\n      return __jsx(\"div\", {\n        className: \"container row equal-col cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, array.map(function (data, i) {\n        return __jsx(\"div\", {\n          className: \"col s12 m6 l4\",\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        }, __jsx(Card, _extends({}, data, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }\n        })));\n      }));\n    }\n  }]);\n\n  return Cards;\n}(React.Component);\n\nexport { Cards as default };","map":{"version":3,"sources":["/mnt/c/Users/antho/Desktop/Graham-drywall/components/cards/index.js"],"names":["Cards","document","elem","querySelector","msnry","Masonry","itemSelector","props","Card","array","map","data","i","React","Component"],"mappings":";;;;;;;;;;;;;;IAAqBA,K;;;;;;;;;;;;;wCACC;AAClB;AACA,UAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAIC,IAAI,GAAGD,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAX;AACA,YAAIC,KAAK,GAAG,IAAIC,OAAJ,CAAaH,IAAb,EAAmB;AAC7B;AACAI,UAAAA,YAAY,EAAE,MAFe,CAG7B;;AAH6B,SAAnB,CAAZ;AAKD;AACF;;;6BAEQ;AAAA;;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,eACT;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAEA,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD,eAAUD,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADS;AAAA,OAAV,CADH,CADF;AASD;;;;EAxBgCE,KAAK,CAACC,S;;SAApBd,K","sourcesContent":["export default class Cards extends React.Component {\n  componentDidMount() {\n    // initialize masonry.js class when on the client side\n    if (typeof document !== 'undefined') {\n      var elem = document.querySelector('.cards');\n      var msnry = new Masonry( elem, {\n        // options\n        itemSelector: '.col',\n        // columnWidth: 200\n      });\n    }\n  }\n\n  render() {\n    const { Card, array } = this.props;\n    return (\n      <div className=\"container row equal-col cards\">\n        {array.map((data, i) => (\n          <div className=\"col s12 m6 l4\" key={i}>\n            <Card {...data} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}